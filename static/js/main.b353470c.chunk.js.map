{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo-connected.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","class","onSubmit","preventDefault","reset","handleSubmit","placeholder","onChange","defaultValue","type","min","max","Button","variant","TodoList","console","log","list","map","className","complete","toString","key","_id","onClick","handleComplete","assignee","text","delete","edit","todoAPI","ToDo","setList","_getTodoItems","fetch","method","mode","then","data","json","results","catch","error","useEffect","document","title","filter","length","Navbar","expand","sticky","due","Date","cache","headers","body","JSON","stringify","response","savedItem","id","i","url","listItem","App","Brand","href","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b353470c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport './form.scss';\n\n// class TodoForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { item: {} };\n//   }\n//   handleInputChange = e => {\n//     this.setState({ item: {...this.state.item, [e.target.name]: e.target.value } });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();\n//     this.props.handleSubmit(this.state.item);\n//     const item = {};\n//     this.setState({item});\n//   };\n\nconst TodoForm = (props) => {\n  const [item, setItem] = useState({});\n\n  const handleInputChange = e => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    setItem(item);\n    }\n\n  // render() {\n    return (\n      <div class=\"form\">\n        <h3>Add Item</h3>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <span>To Do Item</span>\n            <input\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </label>\n          <label>\n            <span>Difficulty Rating</span>\n            <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </label>\n          <label>\n            <span>Assigned To</span>\n            <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </label>\n          <Button type=\"submit\" variant=\"primary\">Add Item</Button>{' '}\n          \n        </form>\n      </div>\n    );\n  // }\n}\n\nexport default TodoForm;","import React from 'react';\nimport './list.scss';\n\n// class TodoList extends React.Component {\n\nconst TodoList = (props) => {\nconsole.log('PROPS:', props);\n  // render() {\n    return (\n      <ul class='list-li'>\n        {props.list.map(item => (\n          <li\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n\n            <span onClick={() => props.handleComplete(item._id)}>\n            <h5>{item.assignee}:</h5>\n            <h6>{item.text}</h6>\n            </span>\n            <button onClick={() => props.delete(item._id)}>[X]</button>\n            <button onClick={() => props.edit(item._id)}>[Edit]</button>\n\n          </li>\n          // <li>\n          // </li>\n        ))}\n      </ul>\n    );\n  // }\n}\n\nexport default TodoList;","import React, { useEffect, useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n// import Nav from 'react-bootstrap/Nav';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './todo.scss';\n\nimport './todo-connected.scss';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    // console.log('Item:', item);\n    // console.log('Due Date:', item.due);\n    fetch(todoAPI, {\n    method: 'post',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(item)\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        console.log('Saved Item:', savedItem);\n        setList([...list, savedItem])\n      })\n      .catch(console.error);\n  };\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(item)\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n\n  // const _editItem = id => {\n  //   let item = list.filter(i => i._id === id)[0] || {};\n  //   if (item._id) {\n  //     let url = `${todoAPI}/${id}`;\n  //     fetch(url, {\n  //       method: 'put',\n  //       mode: 'cors',\n  //       cache: 'no-cache',\n  //       headers: { 'Content-Type': 'application/json' },\n  //       body: JSON.stringify(item),\n  //     })\n  //     .then(response => response.json())\n  // }\n\n  const _deleteItem = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'delete',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n      })\n      .then(response => response.json())\n      .then(_getTodoItems)\n      .catch(console.error)\n    }\n  }\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get',\n      mode: 'cors',\n    })\n      .then(data => data.json())\n      .then(data => setList(data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems);\n  // console.log('LIST on TODO:', list);\n\n  useEffect(() => {\n    document.title = `To-do List: ${list.filter(item => !item.complete).length}`\n  })\n  \n  return (\n    <>\n    <div>\n      <header class=\"todo-header\">\n      <Navbar variant=\"light\" expand=\"lg\" sticky=\"top\" className=\"nav-color-todo\">        \n        <h2>\n          To-do List Manager ({list.filter(item => !item.complete).length})\n        </h2>\n      </Navbar>\n      </header>\n      <section className=\"todo\">\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n            delete={_deleteItem}\n            // edit={_editItem}\n          />\n        </div>\n      </section>\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n// import Nav from 'react-bootstrap/Nav';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ToDo from './components/todo/todo-connected.js';\nimport './components/todo/app.scss';\n\nconst App = () => {\n\n  return (\n      <>\n      <header>\n      <Navbar variant=\"dark\" expand=\"lg\" sticky=\"top\" className=\"nav-color\">        \n      <Navbar.Brand\n          href=\"#home\">Home</Navbar.Brand>\n        </Navbar>\n      </header>\n        <ToDo />\n      </>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst Main = () => {\n\n  return <App />;\n  }\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}