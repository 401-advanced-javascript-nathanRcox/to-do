{"version":3,"sources":["components/hooks/form-hook.js","components/todo/form.js","components/todo/list.js","components/hooks/axios-hook.js","components/todo/todo-connected.js","app.js","index.js"],"names":["useForm","callback","useState","item","setItem","e","target","name","value","preventDefault","reset","TodoForm","props","handleSubmit","handleInputChange","className","onSubmit","data-testid","placeholder","onChange","defaultValue","type","min","max","Button","variant","TodoList","list","map","complete","toString","key","_id","onClick","handleComplete","assignee","text","delete","edit","axios","require","default","todoAPI","useAxios","setList","_getTodoItems","get","then","response","data","catch","console","error","due","Date","post","difficulty","savedItem","log","id","filter","i","url","put","listItem","ToDo","_addItem","_toggleComplete","_deleteItem","useEffect","document","title","length","Navbar","expand","sticky","App","Brand","href","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"gXAsBeA,EApBC,SAACC,GAAc,IAAD,EACJC,mBAAS,IADL,mBACrBC,EADqB,KACfC,EADe,KAc5B,MAAO,CAXmB,SAAAC,GACxBD,EAAQ,2BAAKD,GAAN,kBAAaE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAE1B,SAAAH,GACnBA,EAAEI,iBACFJ,EAAEC,OAAOI,QAETT,EAASE,GACTC,EAAQD,MC6DGQ,G,MAnDE,SAACC,GAAU,MAagBZ,GAE1C,SAAkBG,GAGhBS,EAAMC,aAAaV,MAlBK,mBAanBW,EAbmB,KAaAD,EAbA,KAsB1B,OACE,yBAAKE,UAAU,QACb,wCACA,0BAAMC,SAAUH,GACd,2BAAOI,cAAY,gBACjB,4CACA,2BACEV,KAAK,OACLW,YAAY,sBACZC,SAAUL,EACVG,cAAY,cAGhB,+BACE,mDACA,2BAAOG,aAAa,IAAIC,KAAK,QAAQC,IAAI,IAAIC,IAAI,IAAIhB,KAAK,aAAaY,SAAUL,EAAmBG,cAAY,gBAElH,+BACE,6CACA,2BAAOI,KAAK,OAAOd,KAAK,WAAWW,YAAY,cAAcC,SAAUL,EAAmBG,cAAY,cAExG,kBAACO,EAAA,EAAD,CAAQH,KAAK,SAASJ,cAAY,SAASQ,QAAQ,WAAnD,YAA+E,QClCxEC,G,MA3BE,SAACd,GAGd,OACE,wBAAIG,UAAU,WACXH,EAAMe,KAAKC,KAAI,SAAAzB,GAAI,OAClB,wBACEY,UAAS,mBAAcZ,EAAK0B,SAASC,YACrCC,IAAK5B,EAAK6B,KAGV,0BAAMC,QAAS,kBAAMrB,EAAMsB,eAAe/B,EAAK6B,OAC/C,4BAAK7B,EAAKgC,SAAV,KACA,4BAAKhC,EAAKiC,OAEV,4BAAQH,QAAS,kBAAMrB,EAAMyB,OAAOlC,EAAK6B,OAAzC,OACA,4BAAQC,QAAS,kBAAMrB,EAAM0B,KAAKnC,EAAK6B,OAAvC,iB,QCpBNO,EAAQC,EAAQ,IAASC,QAMzBC,EAAU,4CAmEDC,EAjEE,WAAO,IAAD,EACGzC,mBAAS,IADZ,mBACdyB,EADc,KACRiB,EADQ,KA+CfC,EAAgB,WACpBN,EAAMO,IAAIJ,GACPK,MAAK,SAAAC,GAEJJ,EAAQI,EAASC,SAElBC,MAAMC,QAAQC,QAGnB,MAAO,CACLzB,EAtDgB,SAAAxB,GAEhBA,EAAKkD,IAAM,IAAIC,KACff,EAAMgB,KAAKb,EAAS,CAClBN,KAAMjC,EAAKiC,KACXD,SAAUhC,EAAKgC,SACfqB,WAAYrD,EAAKqD,aAEhBT,MAAK,SAAUC,GACd,IAAIS,EAAYT,EAASC,KACzBL,EAAQ,GAAD,mBAAKjB,GAAL,CAAW8B,QAEnBP,OAAM,SAAUE,GACfD,QAAQO,IAAI,kBAAmBN,OAIb,SAAAO,GACtB,IAAIxD,EAAOwB,EAAKiC,QAAO,SAAAC,GAAC,OAAIA,EAAE7B,MAAQ2B,KAAI,IAAM,GAEhD,GAAIxD,EAAK6B,IAAK,CACZ7B,EAAK0B,UAAY1B,EAAK0B,SACtB,IAAIiC,EAAG,UAAMpB,EAAN,YAAiBiB,GACxBpB,EAAMwB,IAAID,EAAK,CACbjC,SAAU1B,EAAK0B,WAEdkB,MAAK,SAAAC,GACJJ,EAAQjB,EAAKC,KAAI,SAAAoC,GAAQ,OAAIA,EAAShC,MAAQ7B,EAAK6B,IAAMgB,EAASC,KAAOe,SAE1Ed,MAAMC,QAAQC,SAID,SAAAO,GAElB,IADWhC,EAAKiC,QAAO,SAAAC,GAAC,OAAIA,EAAE7B,MAAQ2B,KAAI,IAAM,IACvC3B,IAAK,CACZ,IAAI8B,EAAG,UAAMpB,EAAN,YAAiBiB,GACxBpB,EAAMF,OAAOyB,GACVf,MAAK,SAAAC,GAAQ,OAAIG,QAAQO,IAAI,CAAEV,gBAC/BD,MAAK,kBAAMF,OACXK,MAAMC,QAAQC,SAkBnBP,IC6HWoB,EA9KF,WAAO,IAAD,EAEqDtB,IAFrD,mBAEVhB,EAFU,KAEJuC,EAFI,KAEMC,EAFN,KAEuBC,EAFvB,KAEoCvB,EAFpC,KAkJjB,OARAwB,oBAAUxB,EAAe,IAGzBwB,qBAAU,WACRC,SAASC,MAAT,sBAAgC5C,EAAKiC,QAAO,SAAAzD,GAAI,OAAKA,EAAK0B,YAAU2C,WAGtErB,QAAQO,IAAI,QAAS/B,GAEnB,oCACE,6BACE,4BAAQZ,UAAU,eAChB,kBAAC0D,EAAA,EAAD,CAAQhD,QAAQ,QAAQiD,OAAO,KAAKC,OAAO,MAAM5D,UAAU,kBACzD,mDACuBY,EAAKiC,QAAO,SAAAzD,GAAI,OAAKA,EAAK0B,YAAU2C,OAD3D,OAKJ,6BAASzD,UAAU,QACjB,6BACE,kBAAC,EAAD,CAAUF,aAAcqD,KAE1B,6BACE,kBAAC,EAAD,CACEvC,KAAMA,EACNO,eAAgBiC,EAChB9B,OAAQ+B,SC9JPQ,G,MAfH,WAEV,OACI,oCACA,gCACA,kBAACH,EAAA,EAAD,CAAQhD,QAAQ,OAAOiD,OAAO,KAAKC,OAAO,MAAM5D,UAAU,aAC1D,kBAAC0D,EAAA,EAAOI,MAAR,CACIC,KAAK,SADT,UAIE,kBAAC,EAAD,SCjBFC,EAAO,WAEX,OAAO,kBAAC,EAAD,OAGHC,EAAcV,SAASW,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUH,K","file":"static/js/main.9c50a53f.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (callback) => {\n  const [item, setItem] = useState({});\n\n  const handleInputChange = e => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.target.reset();\n    // console.log({item});\n    callback(item); // used to be props.handleSubmit\n    setItem(item);\n  }\n\n  return [\n    handleInputChange,\n    handleSubmit\n  ];\n};\n\nexport default useForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useForm from '../hooks/form-hook';\n\nimport './form.scss';\n\n// class TodoForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { item: {} };\n//   }\n//   handleInputChange = e => {\n//     this.setState({ item: {...this.state.item, [e.target.name]: e.target.value } });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();\n//     this.props.handleSubmit(this.state.item);\n//     const item = {};\n//     this.setState({item});\n//   };\n\nconst TodoForm = (props) => {\n  // const [item, setItem] = useState({});\n\n  // const handleInputChange = e => {\n  //   setItem({ ...item, [e.target.name]: e.target.value });\n  // }\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   e.target.reset();\n  //   props.handleSubmit(item);\n  //   setItem(item);\n  //   }\n\n  const [handleInputChange, handleSubmit] = useForm(sendItem);\n\n  function sendItem(item) {\n    // console.log({item});\n\n    props.handleSubmit(item);\n  };\n\n  // render() {\n  return (\n    <div className=\"form\">\n      <h3>Add Item</h3>\n      <form onSubmit={handleSubmit}>\n        <label data-testid=\"todoItem-all\">\n          <span>To Do Item</span>\n          <input\n            name=\"text\"\n            placeholder=\"Add To Do List Item\"\n            onChange={handleInputChange}\n            data-testid=\"todoItem\"\n          />\n        </label>\n        <label>\n          <span>Difficulty Rating</span>\n          <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} data-testid=\"difficulty\" />\n        </label>\n        <label>\n          <span>Assigned To</span>\n          <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} data-testid=\"assignee\" />\n        </label>\n        <Button type=\"submit\" data-testid=\"submit\" variant=\"primary\">Add Item</Button>{' '}\n\n      </form>\n    </div>\n  );\n  // }\n}\n\nexport default TodoForm;","import React from 'react';\nimport './list.scss';\n\n// class TodoList extends React.Component {\n\nconst TodoList = (props) => {\n// console.log('PROPS:', props);\n  // render() {\n    return (\n      <ul className='list-li'>\n        {props.list.map(item => (\n          <li\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n\n            <span onClick={() => props.handleComplete(item._id)}>\n            <h5>{item.assignee}:</h5>\n            <h6>{item.text}</h6>\n            </span>\n            <button onClick={() => props.delete(item._id)}>[X]</button>\n            <button onClick={() => props.edit(item._id)}>[Edit]</button>\n\n          </li>\n          // <li>\n          // </li>\n        ))}\n      </ul>\n    );\n  // }\n}\n\nexport default TodoList;","import { useState } from 'react';\nconst axios = require('axios').default;\n\n// const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n// const todoAPI = 'http://localhost:3001/todo';\n\nconst todoAPI = 'https://nrc-api-server.herokuapp.com/todo';\n\nconst useAxios = () => {\n  const [list, setList] = useState([]);\n\n  const _addItem = (item => {\n    // console.log({item});\n    item.due = new Date();\n    axios.post(todoAPI, {\n      text: item.text,\n      assignee: item.assignee,\n      difficulty: item.difficulty\n    })\n      .then(function (response) {\n        let savedItem = response.data;\n        setList([...list, savedItem])\n      })\n      .catch(function (error) {\n        console.log('Add-item error:', error);\n      })\n  })\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    // console.log({item})\n    if (item._id) {\n      item.complete = !item.complete;\n      let url = `${todoAPI}/${id}`;\n      axios.put(url, {\n        complete: item.complete,\n      })\n        .then(response => {\n          setList(list.map(listItem => listItem._id === item._id ? response.data : listItem));\n        })\n        .catch(console.error);\n    }\n  }\n\n  const _deleteItem = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      let url = `${todoAPI}/${id}`;\n      axios.delete(url)\n        .then(response => console.log({ response }))\n        .then(() => _getTodoItems()) // or .then(_getTodoItems);\n        .catch(console.error)\n    }\n  }\n\n  const _getTodoItems = () => {\n    axios.get(todoAPI)\n      .then(response => {\n        // console.log('Response:', response);\n        setList(response.data)\n      })\n      .catch(console.error);\n  };\n\n  return [\n    list,\n    _addItem,\n    _toggleComplete,\n    _deleteItem,\n    _getTodoItems\n  ]\n}\n\nexport default useAxios;\n","import React, { useEffect } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n// import Nav from 'react-bootstrap/Nav';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './todo.scss';\nimport './todo-connected.scss';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport useAxios from '../hooks/axios-hook';\n// const axios = require('axios').default;\n\n// const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n// const todoAPI = 'http://localhost:3001/todo';\n\n// const todoAPI = 'https://nrc-api-server.herokuapp.com/todo';\n\nconst ToDo = () => {\n\n  const [list, _addItem, _toggleComplete, _deleteItem, _getTodoItems] = useAxios();\n\n  // const [list, setList] = useState([]);\n\n  // const _addItem = (item) => {\n  //   item.due = new Date();\n  //   fetch(todoAPI, {\n  //     method: 'post',\n  //     mode: 'cors',\n  //     cache: 'no-cache',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     body: JSON.stringify(item)\n  //   })\n  //     .then(response => response.json())\n  //     .then(savedItem => {\n  //       console.log('Saved Item:', savedItem);\n  //       setList([...list, savedItem])\n  //     })\n  //     .catch(console.error);\n  // };\n\n  // const _addItem = (item => {\n  //   // console.log({item});\n  //   item.due = new Date();\n  //   axios.post(todoAPI, {\n  //     text: item.text,\n  //     assignee: item.assignee,\n  //     difficulty: item.difficulty })\n  //     .then(function (response) {\n  //       let savedItem = response.data;\n  //       setList([...list, savedItem])\n  //     })\n  //     .catch(function (error) {\n  //       console.log('Add-item error:', error);\n  //     })\n  // })\n\n  // // const _toggleComplete = id => {\n  // //   let item = list.filter(i => i._id === id)[0] || {};\n  // //   if (item._id) {\n  // //     item.complete = !item.complete;\n  // //     let url = `${todoAPI}/${id}`;\n  // //     fetch(url, {\n  // //       method: 'put',\n  // //       mode: 'cors',\n  // //       cache: 'no-cache',\n  // //       headers: { 'Content-Type': 'application/json' },\n  // //       body: JSON.stringify(item)\n  // //     })\n  // //       .then(response => response.json())\n  // //       .then(savedItem => {\n  // //         setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n  // //       })\n  // //       .catch(console.error);\n  // //   }\n  // // };\n\n  // const _toggleComplete = id => {\n  //   let item = list.filter(i => i._id === id)[0] || {};\n  //   // console.log({item})\n  //   if (item._id) {\n  //     item.complete = !item.complete;\n  //     let url = `${todoAPI}/${id}`;\n  //     axios.put(url, {\n  //       complete: item.complete,\n  //     })\n  //       .then(response => {\n  //         setList(list.map(listItem => listItem._id === item._id ? response.data : listItem));\n  //       })\n  //       .catch(console.error);\n  //   }\n  // }\n\n  // // const _editItem = id => {\n  // //   let item = list.filter(i => i._id === id)[0] || {};\n  // //   if (item._id) {\n  // //     let url = `${todoAPI}/${id}`;\n  // //     fetch(url, {\n  // //       method: 'put',\n  // //       mode: 'cors',\n  // //       cache: 'no-cache',\n  // //       headers: { 'Content-Type': 'application/json' },\n  // //       body: JSON.stringify(item),\n  // //     })\n  // //     .then(response => response.json())\n  // // }\n\n  // // const _deleteItem = id => {\n  // //   let item = list.filter(i => i._id === id)[0] || {};\n  // //   if (item._id) {\n  // //     let url = `${todoAPI}/${id}`;\n  // //     fetch(url, {\n  // //       method: 'delete',\n  // //       mode: 'cors',\n  // //       cache: 'no-cache',\n  // //       headers: { 'Content-Type': 'application/json' },\n  // //     })\n  // //       .then(response => response.json())\n  // //       .then(_getTodoItems())\n  // //       .catch(console.error)\n  // //   }\n  // // }\n\n  // const _deleteItem = id => {\n  //   let item = list.filter(i => i._id === id)[0] || {};\n  //   if (item._id) {\n  //     let url = `${todoAPI}/${id}`;\n  //     axios.delete(url)\n  //       .then(response => console.log({response}))\n  //       .then(() => _getTodoItems()) // or .then(_getTodoItems);\n  //       .catch(console.error)\n  //   }\n  // }\n\n  // // const _getTodoItems = () => {\n  // //   fetch(todoAPI, {\n  // //     method: 'get',\n  // //     mode: 'cors',\n  // //   })\n  // //     .then(data => data.json())\n  // //     .then(data => {\n  // //       console.log('DATA:', data);\n  // //       setList(data)\n  // //     })\n  // //     .catch(console.error);\n  // // };\n\n  // const _getTodoItems = () => {\n  //   axios.get(todoAPI)\n  //     .then(response => {\n  //       // console.log('Response:', response);\n  //       setList(response.data)\n  //     })\n  //     .catch(console.error);\n  // };\n\n  useEffect(_getTodoItems, []);\n  // console.log('LIST on TODO:', list);\n\n  useEffect(() => {\n    document.title = `To-do List: ${list.filter(item => !item.complete).length}`\n  });\n\n  console.log('LIST:', list);\n  return (\n    <>\n      <div>\n        <header className=\"todo-header\">\n          <Navbar variant=\"light\" expand=\"lg\" sticky=\"top\" className=\"nav-color-todo\">\n            <h2>\n              To-do List Manager ({list.filter(item => !item.complete).length})\n        </h2>\n          </Navbar>\n        </header>\n        <section className=\"todo\">\n          <div>\n            <TodoForm handleSubmit={_addItem} />\n          </div>\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={_toggleComplete}\n              delete={_deleteItem}\n            // edit={_editItem}\n            />\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n// import Nav from 'react-bootstrap/Nav';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ToDo from './components/todo/todo-connected.js';\nimport './components/todo/app.scss';\n\nconst App = () => {\n\n  return (\n      <>\n      <header>\n      <Navbar variant=\"dark\" expand=\"lg\" sticky=\"top\" className=\"nav-color\">        \n      <Navbar.Brand\n          href=\"#home\">Home</Navbar.Brand>\n        </Navbar>\n      </header>\n        <ToDo />\n      </>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst Main = () => {\n\n  return <App />;\n  }\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}